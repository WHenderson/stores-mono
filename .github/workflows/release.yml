name: "Publish updated packages"

on:
  workflow_dispatch:
    inputs:
      confirm_outside_develop:
        description: 'Tick to confirm if intentionally running outside of develop'
        required: true
        type: boolean

jobs:
  # Ensure we are running on the expected branch
  validate:
    name: 'Validate'
    runs-on: ubuntu-latest
    steps:
      - name: Validate
        if: github.ref != 'refs/heads/develop'
        env:
          CONFIRM_OUTSIDE: ${{ github.event.inputs.confirm_outside_develop }}
        run: |
          if [ "$CONFIRM_OUTSIDE" == 'false' ]; then
            echo "It looks like you've accidentally tried to run this action outside of develop. Either: "
            echo " - Re-run the pipeline and select develop, or"
            echo " - If you really do want to run on this branch, then re-run and tick the box to confirm"
            exit 1
          fi

  version-and-publish:
    needs: validate
    name: "Publish updated packages"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Install git flow
        run: sudo apt-get install git-flow

      - name: Initialise git flow
        run: git flow init -d

      - name: Find current package version
        run: echo "MONO_VERSION=$(node -e "console.log(require('./package.json').version.match(/^[^+]+/)[0]);")" >> $GITHUB_ENV

      - name: Create release branch
        run: git flow release start "v$MONO_VERSION+$GITHUB_RUN_NUMBER"

      - name: Disable recursive install
        run: echo "recursive-install=false" >> .npmrc

      - name: Install /just/ workspace modules
        run: pnpm install

      - name: Revert .npmrc
        run: git checkout -- .npmrc

      - name: Version Packages
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          commit: "chore: Version Packages"
          title: "chore: Version Packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install modules
        run: pnpm install -r

      - name: Build modules
        run: pnpm run build

      - name: List git state
        run: git status -b -s

      - name: Finish release
        run: git flow release finish "v$MONO_VERSION+$GITHUB_RUN_NUMBER" -m "Chore - Version release"

      - name: Push tags
        run: git push origin --tags

#      - name: Publish Packages
#        uses: changesets/action@v1
#        with:
#          publish: pnpm publish -r --publish-branch master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
